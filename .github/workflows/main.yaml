name: CI

on:
  push:
    branches:
        - development
        - staging
        - master

jobs:
  test:
    name: "Run Tests"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
            python-version: '3.12'

      - name: Install dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

      - name: Run pytest
        run: pytest

  bandit:
    name: "Run Bandit Check"
    needs: test 
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    steps:
      - name: Perform Bandit Analysis
        uses: PyCQA/bandit-action@v1

  dependency-check:
    name: "Owasp Dependency Check"
    runs-on: ubuntu-latest
    needs: test
    steps: 
        - name: Checkout
          uses: actions/checkout@v4

        - name: Download OWASP Dependency Check
          run: |
            VERSION=$(curl -s https://jeremylong.github.io/DependencyCheck/current.txt)
            curl -sL "https://github.com/jeremylong/DependencyCheck/releases/download/v$VERSION/dependency-check-$VERSION-release.zip" --output dependency-check.zip
            unzip dependency-check.zip

        - name: Run Dependency Check
          run: |
            ./dependency-check/bin/dependency-check.sh --nvdApiKey ${{ secrets.NVD_KEY }} --out report.html --scan ./todo_project 
            rm -rf dependency-check*
  
        - name: Upload Artifacts
          uses: actions/upload-artifact@v4
          with:
            name: artifacts
            path: report.html
    
  owasp-zap:
      name: "Build, Test, and Run OWASP ZAP Scan"
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v4
          
        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: '3.12'

        - name: Install Dependencies
          run: pip install -r requirements.txt

        # Start the Python application
        - name: Start the Python app
          run: |
            nohup python ./todo_project/run.py &  # Start the app in the background
            sleep 10  # Give the app time to start

        # Pull and run OWASP ZAP container
        - name: ZAP Scan
          uses: zaproxy/action-full-scan@v0.10.0
          with:
            target: 'http://127.0.0.1:5000'

        # Upload OWASP ZAP report as an artifact
        - name: Upload ZAP Report
          uses: actions/upload-artifact@v4
          with:
            name: zap-report
            path: report_html.html

  build-and-push:
    name: "Build and Push"
    runs-on: ubuntu-latest
    needs: [bandit, dependency-check, owasp-zap]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Generate Sha
        id: generate_sha
        run: |
          SHA=$(echo $GITHUB_SHA | head -c7)
          echo "sha=$SHA" >> $GITHUB_OUTPUT

      - name: Login into the container registry
        uses: docker/login-action@v3

        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            gmarinho21/gabriel-hdb:latest
